name: Deploy to GitHub Pages

on:
  # You can manually run this workflow.
  workflow_dispatch:
  # This workflow will run on every push to the main branch.
  push:
    branches:
      - main
    # Restrict the workflow to run only on changes to the following paths.
    paths:
      - 'playground/**'
      - '.github/workflows/deploy-gh-pages.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Prepare deploy folder
        run: |
          mkdir deploy
          cp -r playground/* deploy/
          cd deploy
          rm -rf .devcontainer node_modules test-results
          rm -f .editorconfig .gitignore biome.json readme.md serve.sh setup.sh

      - name: Generate php-versions.json from WASM filenames
        run: |
          cd deploy/assets/wasm
          echo "[" > php-versions.json
          first=1
          for file in php-*-web.wasm; do
            [ -e "$file" ] || continue
            # Extract version from filename, e.g. php-8.4.8-web.wasm -> 8.4.8
            version=$(echo "$file" | sed -E 's/^php-([0-9]+\.[0-9]+\.[0-9]+)-web\.wasm$/\1/')
            if [ $first -eq 0 ]; then echo "," >> php-versions.json; fi
            echo "  {\"version\": \"$version\"}" >> php-versions.json
            first=0
          done
          echo "]" >> php-versions.json
          cat php-versions.json

      - name: Set Application Version
        run: |
          cd deploy
          git_hash=$(git rev-parse --short HEAD)
          echo "Git hash: $git_hash"
          version=$(node -p "require('./package.json').version")
          echo "Version: $version"
          echo "{\"version\": \"$version\", \"git_hash\": \"$git_hash\"}" > version.json
          rm -f package.json

      - name: Test JSON files for validity
        run: |
          cd deploy
          for file in version.json php-versions.json playground/examples/examples.json; do
            if [ -f "$file" ]; then
              if ! jq empty "$file"; then
                echo "Invalid JSON in $file"
                exit 1
              fi
            fi
          done

      - name: âœ” Initialize Git and commit
        run: |
          cd deploy
          git init
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git checkout -b gh-pages
          git add .
          git commit -m "Deploy to GitHub Pages from ${GITHUB_REPOSITORY}@${GITHUB_SHA::9}"

      - name: ðŸš€ Push to gh-pages branch
        run: |
          cd deploy
          git push --force origin gh-pages
